@page "/events"
<head>
    <!--Bootstrap Initialization-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <style>
        <!--Stylesheet for html-->
        body {
            font: "helvetica";
        }

        ul {
            height: 150px;
            width: 100%;
            overflow: hidden;
            overflow-y: scroll;
        }

        .taskstable {
            overflow: hidden;
            overflow-y: scroll;
            height: 100px;
            width: 100%;
        }

        .late, .upcoming, .completed {
            margin-bottom: 40px;
            height: 200px;
            border: black solid;
            border-width: 1px;
            border-radius: 5px;
        }

        .col1 h2 {
            padding: 3px;
            font-size: 20px;
            border: black solid;
            background-color: rgb(240, 240, 240);
            border-width: 1px;
            border-radius: 2px;
        }

        .title p {
            padding-left: 10px;
        }

        .btn {
            margin-top: 10px;
            width: 100%;
        }

        .time p {
            padding-right: 10px;
            float: right;
            margin-top: -40px;
        }
    </style>
</head>

<body>
    <!--Refresh for progress bar, and buttons for adding and refreshing-->
    <div class="row content">
        <div class="col-sm-8 col1">
            <h1>Events</h1>
        </div>
        <!--Refresh Button-->
        <div class="col-sm-2 col1">
            <button @onclick="Refresh" type="button" class="btn btn-primary">Refresh</button>
        </div>
        <!--Add Button-->
        <div class="col-sm-2 col1">
            <button @onclick="AddEvent" type="button" class="btn btn-primary">Add an Event</button>
        </div>
    </div>
    <!--Progress Bar-->
    <div class="progress" style="height: 30px;">
        <div class="progress-bar" role="progressbar" style="width: @Math.Round(DB.EventsCompletedPercentage(), 2)%;" aria-valuenow="@Math.Round(DB.EventsCompletedPercentage(), 2)" aria-valuemin="0" aria-valuemax="100">@Math.Round(DB.EventsCompletedPercentage(), 2)</div>
    </div>
    <!--Number for progress-->
    <div class="amountofprogress">
        <p role="percent">Currently Finished @Math.Round(DB.EventsCompletedPercentage(), 2) %</p>
    </div>
    <!--Table for Events-->
    <table class="taskstable">
        <thead>
            <tr>
                <th>Event</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
            <!--Forloop that puts in the objects to string-->
            @foreach (var Event in DB.GetEvents())
            {
                <tr>
                    <td>@Event.Name</td>
                    <td>@Event.Date</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="row content">
        <!--For loop for upcoming events-->
        <div class="col-sm-6 col1">
            <div class="upcoming">
                <h2><small>Upcoming</small></h2>
                <ul>
                    @foreach (var Upcoming in DB.GetFinishedEvents())
                    {
                        <li>@Upcoming.Name</li>
                    }
                </ul>
            </div>
        </div>
        <div class="col-sm-6 col1">
            <!--For loop for completed events-->
            <div class="completed">
                <h2><small>Completed</small></h2>
                <ul>
                    @foreach (var Completed in DB.GetFinishedEvents())
                    {
                        <li>@Completed.Name</li>
                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="title">
        <!--Title of program-->
        <p>LearniMange</p>
    </div>




    @code {
        <!--Initialize databases-->
        private int percentageFinished = 0;

        private LearnDatabase DB = new LearnDatabase("E:\\211\\LearniMange\\LearniMange\\Services\\Database\\learn.db");
        <!--Add Event function-->
        async void AddEvent()
        {
            string EventName;
            string EventYear;
            string EventMonth;
            string EventDay;
            string EventTime;
            EventName = await App.Current.MainPage.DisplayPromptAsync("Add Event", "Event");

            EventYear = await App.Current.MainPage.DisplayPromptAsync("Add Year", "");
            EventMonth = await App.Current.MainPage.DisplayPromptAsync("Add Month", "");
            EventDay = await App.Current.MainPage.DisplayPromptAsync("Add Day", "");
            EventTime = await App.Current.MainPage.DisplayPromptAsync("Add Time Hour due Date", "");
            <!--Checks if the last prompt has a value before going through-->
            if (string.IsNullOrEmpty(EventTime))
            {
            }
            else
            {
                <!--Catches argumetn exception in case user puts in wrong inputs-->
                try
                {
                    DB.AddEvent(new Event(EventName, new DateTime(Convert.ToInt32(EventYear), Convert.ToInt32(EventMonth), Convert.ToInt32(EventDay), Convert.ToInt32(EventTime), 0, 0)));
                }
                catch (ArgumentException)
                {
                    await App.Current.MainPage.DisplayPromptAsync("Error", "Please enter correct inputs");
                }
            }

        }
        <!--Refreshes the page to see updated database-->
        void Refresh()
        {
        }
    }
</body>