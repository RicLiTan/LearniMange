@page "/tasks"
<head>
    <!--Bootstrap Initialization-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <!--Stylesheet for html-->
    <style>
        body 
        {
            font: "helvetica";
        }

        ul 
        {
            height: 150px;
            width: 100%;
            overflow: hidden;
            overflow-y: scroll;
        }
        .taskstable
        {
            overflow: hidden;
            overflow-y: scroll;
            height: 100px;
            width: 100%;
        }

        .late, .upcoming, .completed 
        {
            margin-bottom: 40px;
            height: 200px;
            border: black solid;
            border-width: 1px;
            border-radius: 5px;
        }

        .col1 h2 
        {
            padding: 3px;
            font-size: 20px;
            border: black solid;
            background-color: rgb(240, 240, 240);
            border-width: 1px;
            border-radius: 2px;
        }

        .title p 
        {
            padding-left: 10px;
        }
        .btn
        {
            margin-top: 10px;
            width: 100%;
        }

        .time p {
            padding-right: 10px;
            float: right;
            margin-top: -40px;
        }
    </style>
</head>

<body>
    <!--Tasks for progress bar, and buttons for adding and refreshing-->
    <div class="row content">
        <div class="col-sm-8 col1">
            <h1>Tasks</h1>
        </div>
        <!--Refresh Button-->
        <div class="col-sm-2 col1">
            <button @onclick = "Refresh" type="button" class="btn btn-primary">Refresh</button>
        </div>
        <!--Add Button-->
        <div class="col-sm-2 col1">
            <button @onclick="AddTask" type="button" class="btn btn-primary">Add a Task</button>
        </div>
    </div>
    <!--Progress Bar-->
    <div class="progress" style="height: 30px;">
        <div class="progress-bar" role="progressbar" style="width: @Math.Round(DB.TasksCompletedPercentage(), 2)%;" aria-valuenow="@Math.Round(DB.TasksCompletedPercentage(), 2)" aria-valuemin="0" aria-valuemax="100">@Math.Round(DB.TasksCompletedPercentage(), 2)</div>
    </div>

    <!--Number for progress-->
    <div class="amountofprogress">
        <p role="percent">Currently Finished @Math.Round(DB.TasksCompletedPercentage(), 2) %</p>
    </div>

    <!--Table for Tasks-->
    <table class="taskstable">
        <thead>
            <tr>
                <th>Task</th>
                <th>Date</th>
                <th>Status</th>
                <th>Is Completed</th>
            </tr>
        </thead>

        <!--Forloop that puts in the objects to string-->
        <tbody>
            @foreach (var Task in DB.GetTasks())
            {
                <tr>
                    <td>@Task.Name</td>
                    <td>@Task.Date</td>
                    <td>@Task.Count/@Task.CompletionCount</td>
                    @if (Task.Count < Task.CompletionCount)
                    {
                        <td>No</td>
                    }
                    else
                    {
                        <td>Yes</td>
                    }
                </tr>
            }
        </tbody>
    </table>
    <!--Foir loop for late tasks-->
        <div class="row content">
            <div class="col-sm-4 col1">
                <div class="late">
                    <h2><small>Late</small></h2>
                    <ul>
                        @foreach (var Late in DB.GetLateTasks())
                        {
                            <li>@Late.Name</li>
                        }
                    </ul>
                </div>
            </div>
        <!--For loop for upcoming tasks-->
            <div class="col-sm-4 col1">
                <div class="upcoming">
                    <h2><small>Upcoming</small></h2>
                    <ul>
                        @foreach (var Upcoming in DB.GetFinishedTasks())
                        {
                            <li>@Upcoming.Name</li>
                        }
                    </ul>
                </div>
            </div>

        <!--For loop for completed tasks-->
            <div class="col-sm-4 col1">
                <div class="completed">
                    <h2><small>Completed</small></h2>
                    <ul>
                        @foreach (var Completed in DB.GetFinishedTasks())
                        {
                            <li>@Completed.Name</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    <!--Title of program-->
    <div class="title">
        <p>LearniMange</p>
    </div>


   

    @code{
        <!--Initialize databases-->

        private LearnDatabase DB = new LearnDatabase("E:\\211\\LearniMange\\LearniMange\\Services\\Database\\learn.db");
        <!--Add task function-->
        async void AddTask()
        {
            string TaskName;
            string TaskYear;
            string TaskMonth;
            string TaskDay;
            string TaskTime;
            string TaskCount;
            TaskName = await App.Current.MainPage.DisplayPromptAsync("Add Task", "Tasks");

            TaskYear = await App.Current.MainPage.DisplayPromptAsync("Add Year", "");
            TaskMonth = await App.Current.MainPage.DisplayPromptAsync("Add Month", "");
            TaskDay = await App.Current.MainPage.DisplayPromptAsync("Add Day", "");
            TaskTime = await App.Current.MainPage.DisplayPromptAsync("Add Time Hour due Date", "");

            TaskCount = await App.Current.MainPage.DisplayPromptAsync("Add Amount of counts required", "");
            <!--Checks if the last prompt has a value before going through-->
            if (string.IsNullOrEmpty(TaskCount))
            
            {
            }
            else
            {
                <!--Catches argumetn exception in case user puts in wrong inputs-->
                try
                {
                    DB.AddTask(new LearnTask(TaskName, (new DateTime(Convert.ToInt32(TaskYear), Convert.ToInt32(TaskMonth), Convert.ToInt32(TaskDay), Convert.ToInt32(TaskTime), 0, 0)), 0, Convert.ToInt32(TaskCount)));
                }
                catch (ArgumentException)
                {
                    await App.Current.MainPage.DisplayPromptAsync("Error", "Please enter correct inputs");
                }
            }
        }
        <!--Refreshes the page to see updated database-->
        void Refresh()
        {
        }

}
</body>